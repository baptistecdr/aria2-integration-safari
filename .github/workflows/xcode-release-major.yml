name: Release Major

on: workflow_dispatch

jobs:
  release-major:
    name: Release Major
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Set major version
        id: major_version
        run: |
          MAJOR_VERSION=$(npm version | grep 'aria2-integration' | grep -oP "\d+\.\d+.\d+")
          SHORT_SHA=$(git rev-parse --short HEAD)
          node scripts/update-version.js $MAJOR_VERSION $SHORT_SHA
          npm install
          npm run lint:fix
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT
      - name: Commit, push and create tag
        uses: EndBug/add-and-commit@v9
        with:
          fetch: true
          default_author: github_actions
          message: Release ${{ steps.major_version.outputs.MAJOR_VERSION }} (${{ steps.major_version.outputs.SHORT_SHA }})
          pathspec_error_handling: exitImmediately
          push: true
          tag: ${{ steps.major_version.outputs.MAJOR_VERSION }}
      - name: Set next dev version
        id: dev_version
        run: |
          DEV_VERSION=$(npm version --no-git-tag-version --no-commit-hooks patch)
          SHORT_SHA=$(git rev-parse --short HEAD)
          node scripts/update-version.js $DEV_VERSION $SHORT_SHA
          npm install
          npm run lint:fix
          echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT
      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          fetch: true
          default_author: github_actions
          message: Set next dev version to ${{ steps.dev_version.outputs.DEV_VERSION }} (${{ steps.dev_version.outputs.SHORT_SHA }})
          pathspec_error_handling: exitImmediately
          push: true
